name: Continuous Delivery

on:
  workflow_dispatch:
    inputs:
      prNumber:
        description: The number of the PR that is being deployed
        required: true
  push:
    branches:
      - main

jobs:
  Publish:
    name: Publish Next to npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          fetch-depth: 0
      - name: Add TypeScript problem matcher
        run: echo "::add-matcher::.github/problemMatchers/tsc.json"
      - name: Use Node.js v16
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # tag=v3
        with:
          node-version: 16
          registry-url: https://registry.npmjs.org/
          cache: yarn
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Bump Version & Publish
        run: |
          # Resolve the tag to be used. "next" for push events, "pr-{prNumber}" for dispatch events.
          TAG=$([[ ${{ github.event_name }} == 'push' ]] && echo 'next' || echo 'pr-${{ github.event.inputs.prNumber }}')

          # Bump the version
          yarn standard-version --skip.commit --skip.tag --prerelease "${TAG}.$(git rev-parse --verify --short HEAD)"

          # Publish to NPM
          npm publish --tag ${TAG} || true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  Docgen:
    name: Docgen
    runs-on: ubuntu-latest
    if: "github.event_name == 'push'"
    steps:
      - name: Checkout Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
      - name: Checkout Project
        uses: actions/checkout@a12a3943b4bdde767164f792f33f40b04645d846 # tag=v3
        with:
          ref: gh-pages
          path: out
      - name: Use Node.js v16
        uses: actions/setup-node@5b52f097d36d4b0b2f94ed6de710023fbb8b2236 # tag=v3
        with:
          node-version: 16
          cache: yarn
      - name: Install Dependencies
        run: yarn --frozen-lockfile
      - name: Build documentation
        run: yarn docs
      - name: Publish Docs
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          echo -e "\n# Remove any old files in the out folder"
          rm -rfv out/assets/*
          rm -rfv out/interfaces/*
          rm -rfv out/*.html

          echo -e "\n# Move the generated docs to the newly-checked-out repo, to be committed and pushed"
          rsync -vaI .all-contributorsrc out/
          rsync -vaI LICENSE.md out/
          rsync -vaI README.md out/
          rsync -vaI docs/ out/

          echo -e "\n# Commit and push"
          cd out
          git add --all .
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_EMAIL}"
          git commit -m "docs: api docs build for ${GITHUB_SHA}" || true
          git push origin $TARGET_BRANCH
        env:
          GITHUB_TOKEN: ${{ secrets.SKYRA_TOKEN }}
          GITHUB_ACTOR: NM-EEA-Y
          GITHUB_EMAIL: contact@skyra.pw
